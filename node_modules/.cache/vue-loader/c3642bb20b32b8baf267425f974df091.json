{"remainingRequest":"Z:\\progs\\examples\\workle test\\workle\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\progs\\examples\\workle test\\workle\\src\\views\\Work.vue?vue&type=script&lang=js&","dependencies":[{"path":"Z:\\progs\\examples\\workle test\\workle\\src\\views\\Work.vue","mtime":1603043724542},{"path":"Z:\\progs\\examples\\workle test\\workle\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"Z:\\progs\\examples\\workle test\\workle\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"Z:\\progs\\examples\\workle test\\workle\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"Z:\\progs\\examples\\workle test\\workle\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgUGhvdG8gZnJvbSAnQC9jb21wb25lbnRzL1Bob3RvLnZ1ZScNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ1dvcmsnLA0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY3VycmVudFBhZ2U6IDUNCiAgICB9DQogIH0sDQogIG1vdW50ZWQgKCkgew0KICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdnZXRQaG90b3MnLCB0aGlzLmN1cnJlbnRQYWdlKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgc2V0UGFnZSAocGFnZSkgew0KICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldFBob3RvcycsIHBhZ2UpDQogICAgICBpZiAocGFnZSA+IDIgJiYgcGFnZSA8IDU4KSB7DQogICAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSBwYWdlDQogICAgICB9DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIHBob3RvcyAoKSB7DQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRQaG90b3MNCiAgICB9DQogIH0sDQogIGNvbXBvbmVudHM6IHsNCiAgICBQaG90bw0KICB9DQp9DQo="},{"version":3,"sources":["Work.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Work.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\r\nmain\r\n  div.wrapper\r\n    Photo(v-for='photo in photos' :photo='photo' :key='photo.id')\r\n  div.fixed\r\n     span(@click.stop=\"setPage(1)\") 1\r\n     span ...\r\n     span(@click.stop=\"setPage(currentPage-1)\") {{currentPage-1}}\r\n     span#selected(@click.stop=\"setPage(currentPage)\") {{currentPage}}\r\n     span(@click.stop=\"setPage(currentPage+1)\") {{currentPage+1}}\r\n     span ...\r\n     span(@click.stop=\"setPage(59)\") 59\r\n\r\n</template>\r\n\r\n<script>\r\nimport Photo from '@/components/Photo.vue'\r\nexport default {\r\n  name: 'Work',\r\n  data () {\r\n    return {\r\n      currentPage: 5\r\n    }\r\n  },\r\n  mounted () {\r\n    this.$store.dispatch('getPhotos', this.currentPage)\r\n  },\r\n  methods: {\r\n    setPage (page) {\r\n      this.$store.dispatch('getPhotos', page)\r\n      if (page > 2 && page < 58) {\r\n        this.currentPage = page\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    photos () {\r\n      return this.$store.getters.getPhotos\r\n    }\r\n  },\r\n  components: {\r\n    Photo\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  main {\r\n       width: 100% ;\r\n       margin: auto;\r\n  }\r\n  .wrapper {\r\n     width: 660px;\r\n     margin: auto;\r\n     display: grid;\r\n     grid-template-columns: repeat(2, 320px);\r\n     grid-column-gap: 20px;\r\n     padding-bottom: 60px;\r\n  }\r\n  .fixed {\r\n    position: fixed;\r\n    background: #000000;\r\n    opacity: 0.9;\r\n    width: 100%;\r\n    height: 60px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    color:white;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 15px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    #selected {\r\n      font-size: 18px;\r\n      font-weight: bold;\r\n    }\r\n}\r\n @media screen and (max-width: 768px){\r\n   main {\r\n     width: 768px;\r\n   }\r\n }\r\n @media screen and (max-width: 480px){\r\n   main {\r\n     width: 480px;\r\n   }\r\n   .wrapper {\r\n     width: 480px;\r\n     grid-template-columns: repeat(1, 440px);\r\n     padding-left: 20px;\r\n  }\r\n }\r\n @media screen and (max-width:320px){\r\n      main {\r\n     width: 320px;\r\n   }\r\n     .wrapper {\r\n     width: 320px;\r\n     grid-template-columns: repeat(1, 320px);\r\n     padding-left: 0px;\r\n  }\r\n }\r\n</style>\r\n"]}]}